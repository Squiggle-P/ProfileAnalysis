""" Boilerplate Info
ProfileReader.PY - Import profile data from CSV [R0], scrub it, export standardized format.
* CSV must be generated by MVDC Excel Addin (as fetched from MVDC database).
* Backbone exists to examine multiple datatypes, but as of R0 is hardcoded to look at BW, CW, Moi, and ActFB

Created 08/25/17/PP - [R0]:


Edited  MM/DD/YY/NN - [R1]:

"""

# Libraries
import csv
import numpy

# Globals - to the chagrin of all professionals
CWBinLimits = [15,30]
BWBinLimits = [15,30]
MoiBinLimits = [3,17]
ScanCountLimits = [70,200]

def CSV2Arrays(csvfile):
    """ Opens a CSV file, reads it, returns an array of dictionaries with header keys"""
    ArrayOfArrays = []
    RawRead = []
    with open('TestData.csv','rb') as CSVFile:
        CSVReader = csv.reader(CSVFile,delimiter=',')
        for line in CSVReader:
            RawRead.append(line)
    # File read, close it up

    HeaderArray = RawRead[0]

    RawRead[0] = numpy.zeros((len(RawRead[0])),dtype=numpy.int8)
    #print RawRead[0]
    #print HeaderArray

    Temp = [HeaderArray]

    for line in range(len(RawRead))[1:]:
#        print RawRead[line]
#        print RawRead[line][0]
        if RawRead[line][0]:
            Temp.append(RawRead[line])
        elif RawRead[line+1][0]:
            ArrayOfArrays.append(Temp)
            Temp = [HeaderArray]
        if line == len(RawRead[1:]):
            ArrayOfArrays.append(Temp)
        #else:
            #Temp = [HeaderArray]

    #print ArrayOfArrays

    return ArrayOfArrays

def ScrubArrays(HeaderArray,ReelArrays,*Limits, **OtherLimits):


  print "Hello World"
  TimeCol = HeaderArray.index("Turnup Time")
  try:
    ReelNumCol = HeaderArray.index("PPR Reel Number")
  except ValueError:
      try:
          ReelNumCol = HeaderArray.index("Gauge Reel Number")
          print "PPR Reel Numbers are preferred but not found - using Gauge Reel Number"
      except ValueError:
          print "Could not find Reel Number - proceeding without."

  # TimeCol = HeaderArray.index("PPR Reel Number")
  ScanCol = HeaderArray.index("Number of Scans")
  StartCol = HeaderArray.index("Pos_1")
  EndCol = HeaderArray.index("Pos_1120")


def VerifyReelStreaking(HeaderArray,ReelArray,*Limits,**OtherLimits):

    print "Hello World"


if __name__ == "__main__":
    print "Hello World"
    UnknownArrays = []
    # Import CSVs and process into arrays - hardcoded.
    for dataset in CSV2Arrays("TestData.csv"):
        #print dataset[1][0]
        if dataset[1][0] == 'RL.BSWT (7)':
            BWArray = dataset
        elif dataset[1][0] == 'RL.MST (10)':
            MoiArray = dataset
        elif dataset[1][0] == 'RL.CNDWT (13)':
            CWArray = dataset
        elif dataset[1][0] == 'CTRL.HBDILFB (97)':
            ActArray = dataset
        else:
            UnknownArrays.append(dataset)
            print "Unknown Array %s found and logged as UnknownArrays[%s]" % (dataset[1][0], len(UnknownArrays)-1)

    # Clean the arrays up
    ScrubArrays(BWArray[0],BWArray[2:], BWLim = BWBinLimits, CWLim = CWBinLimits, MoiLim = MoiBinLimits, ScanLim = ScanCountLimits)

    # print numpy.mean(BWArray[2][100:200])